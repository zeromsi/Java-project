/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.msi.adminview;

import com.msi.connection.Connection;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author MSI
 */
public class BarChartOfLastDays extends javax.swing.JFrame {

  
          java.sql.Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
      DateChange d=new DateChange();
       String s =d.s;
        String r30D;
    
    
    ArrayList<Double> totalPrice=new ArrayList();
    ArrayList<String> allDate=new ArrayList();
    public BarChartOfLastDays() {
        conn = Connection.DBconnector();
      
        initComponents();
        
         // getBarChart1();
      
    }
 public void Chart(String date){
      
       try{
           
            String sql = "SELECT  SUM(TotalPrice),Date \n" +
"FROM Customer \n" +
"WHERE Date >='"+date+"' group by Date ";

            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
               // ChartData c=new ChartData();
              double sum=rs.getDouble(1);
              totalPrice.add(sum);
              String Alldate=rs.getString(2);
              allDate.add(Alldate);
           //System.out.print(hh);
            }
       }catch(Exception e){
           
       }finally {
            try {
                pst.close();
                rs.close();
            } catch (Exception e) {

            }
   }
       
     
 }
    
    
    
    public void getBarChart1(String date) {
        Font font3 = new Font("Dialog", Font.PLAIN, 25);
      Chart(date);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
       
        for(int i=0;i<allDate.size();i++){
            dataset.setValue(totalPrice.get(i),"Sale",allDate.get(i));
            
        }        
  
    JFreeChart chart = ChartFactory.createBarChart("Bar Chart", "Date", "Money", dataset, PlotOrientation.VERTICAL, true, false, false);
      chart.setBackgroundPaint(Color.white);
        chart.getTitle().setPaint(Color.black);
        
        CategoryPlot p = chart.getCategoryPlot();
        p.setOrientation(PlotOrientation.HORIZONTAL);
        p.setRangeGridlinePaint(Color.black);
        p.setBackgroundPaint(Color.WHITE);
//       p.getDomainAxis().setLabelFont(font3);
//p.getRangeAxis().setLabelFont(font3);
        //p.setForegroundAlpha(TOP_ALIGNMENT);
        
        ChartPanel fr = new ChartPanel(chart);
        fr.setVisible(true);
        fr.setSize(2000,480);
       
        pnl1.removeAll();
        pnl1.add(fr);
        pnl1.validate();
    
        try{
           final ChartRenderingInfo info=new ChartRenderingInfo(new StandardEntityCollection());
           final File f=new File("barchartdaysfull1.png");
           ChartUtilities.saveChartAsPNG(f, chart, 900,700,info);
       }catch(Exception e){
           
       }
 

    }
         
    
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl1 = new javax.swing.JPanel();
        pnl2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1116, Short.MAX_VALUE)
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    // End of variables declaration//GEN-END:variables
}
